allprojects {
  apply plugin: deps.plugins.dependencychecks.get().pluginId

  def consolidatedConfigurations = project.configurations.matching {
    it.name in [
      "annotationProcessor",
      "compileClasspath",
      "runtimeClasspath",
      "testCompileClasspath",
      "testRuntimeClasspath",
      "testFixturesClasspath",
      "langResources"
    ]
  }

  dependencyVersionChecks {
    lockFileComment = "An inventory of resolved dependency versions. Do not edit this file directly."
    configurationGroups {
      create("all", {
        include consolidatedConfigurations
      })
    }
  }

  dependencies {
    constraints {
      consolidatedConfigurations.configureEach { Configuration conf ->
        add(conf.name, deps.log4j.slf4j2, {
          because("Use consistent log4j version.")
        })
        add(conf.name, deps.log4j.core, {
          because("Use consistent log4j version.")
        })
        add(conf.name, deps.slf4j.api, {
          because("Use consistent slf4j version.")
        })
        add(conf.name, deps.junit, {
          because("Use consistent JUnit version.")
        })
      }
    }
  }
}
